openapi: 3.0.0
info:
  version: 1.1.0
  title: Kubportal Backend API
paths:
  /statistics/{stat}:
    get:
      summary: Get single statistic value
      parameters:
        - in: path
          name: stat
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
                    example: 1.0.0
                    
  /webapps/:
    get:
      summary: Get list of web applications
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    link_name:
                      type: string
                      example: kuchen
                    link_url:
                      type: string
                      example: 'https://mango-saft.com'
                      
  /users/{uid}:
    get:
      summary: Get user details
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 1
                  firstname: 
                    type: string
                    example: 'Mandarin'
                  name:
                    type: string
                    example: 'Orange'
                  username:
                    type: string
                    example: 's77777'
                  primary_email:
                    type: string
                    example: 'foo@bar.de'
                  all_emails:
                    type: array
                    items:
                      type: string
                    example: ['hello@world.de','stein@beisser.de']
                  admin:
                    type: boolean
                    example: true
                  portal_groups:
                    type: array
                    items:
                      type: integer
                    example: ['1', '2']
                  k8s_account:
                    type: string
                    example: 'default'
                  k8s_namespace:
                    type: string
                    example: 'default'
                  k8s_token:
                    type: string
                    example: 'default'
                  k8s_apiserver:
                    type: string
                    example: 'default'
                  k8s_clustername:
                    type: string
                    example: 'default'


    patch:
      summary: Modify user details
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                firstname: 
                  type: string
                  example: 'Mandarin'
                name:
                  type: string
                  example: 'Orange'
                primary_email:
                  type: string
                  example: 'foo@bar.de'
      responses:
        '204':
                    
  /login:
    post:
      summary: Authorize an user with name and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  username:
                    type: string
                    example: 's77777'
                  password:
                    type: string
                    example: 'test'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
  
  /login/authorize_google_user:
    post:
      summary: Authorize a Google user with OAuth credentials
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                    example: 'kolibri@bird.com'
                  username:
                    type: string
                    example: 'CodeinKolibri'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
      
  /logout:
    get:
      summary: Invalidate API login session.
      responses:
        '200':
    

components:
  schemas:
    LoginSuccess:
      type: object
      items:
        type: object
      properties:
        access_token:
          type: string
          example: 'eyfrferf.eyfferferfce.efefcerf'
        refresh_token:
          type: string
          example: 'eyfokpkro.gkfefkoperf.fwdofkpw'
        user:
          type: object
          properties:
            uid: 
              type: integer
              example: 1

servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/troeger/Kubeportal/v1.0.0'
